<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[/*api.controller=function() {
  ///widget controller 
  var c = this;
	c.updateNote = function(updateType) {
    c.server.get({
      action: 'updateNote',
      noteID: c.data.noteID,
      noteBody: c.data.note,
      noteTitle: c.data.title
    }).then(function(r) {
    });
  }
};*/

function($scope,$rootScope, spUtil) {
	/* widget controller */
	var c = this;
	// Snippet from a Server Script 
	if(!options.title){
		options.title = "Hello World";
	}


	//Snippet from a Client Script  
	if(!c.options.title){
		c.options.title = "Hello World";
	}
	c.updateNote = function(updateType) {
		c.server.get({
			action: 'updateNote',
			noteID: c.data.noteID,
			noteBody: c.data.note,
			noteTitle: c.data.title
		}).then(function(r) {
		});
	}
	c.newNote = function() {
		c.server.get({
			action: 'newNote',
		}).then(function(r) {
			c.data.notes.unshift(r.data.newNote);
			c.data.noteID = r.data.noteID;
			$rootScope.noteID = c.data.noteID;
			$rootScope.$emit('selectNote', c.data.noteID);
		});
	}
	$rootScope.$on('deleteNote', function(event,data) {
		c.data.note.splice($scope.notesPos, 1);
	});
	
	// Record removed from data object on the client and passed to server
  c.snNoteUpdate = function(name,sysID){

    for (var i=0;i<c.data.notes.length;i++){
      if(c.data.notes[i].sys_id == name.data.sys_id){
        if(name.data.record.note){
          c.data.notes[i].note = name.data.record.note.display_value;
        }
        if(name.data.record.title){
          c.data.notes[i].title = name.data.record.title.display_value;
        }
        c.server.update();

      }
    }
  }

  // Record removed from data object on the server and passed back to client
  c.snNoteDelete = function(sysID){

    c.server.get({
      action: 'snDeleteNote',
      noteID: sysID

    }).then(function(r){
      c.data.notes = r.data.notes;
    });

  }
	
	spUtil.recordWatch($scope, "x_snc_createnotes_note", "numberANYTHING", function(name) {
		console.log(name.data.operation); 
		console.log(name); 
		if(name.data.operation == "insert"){
			c.server.refresh();
		}
		// Calls a Client Script function to do the update and pass the updated data object
		// to the server.
		if(name.data.operation == "update"){
			c.snNoteUpdate(name, name.data.sys_id);
		}
		// Calls a Client Script function which deletes a record on the server and passes
		// the updated data object back to the client.
		if(name.data.operation == "delete"){
			c.snNoteDelete(name.data.sys_id);
		}
	});
	/*spUtil.recordWatch($scope, "table_name", "filter", function(name) {
    console.log(name.data.operation); 
    console.log(name); 
    });*/

	c.confirmDelete = function(){
		spModal.confirm("Are you sure you want to delete this Note record?").then(function(confirmed){
			if(confirmed){
				c.deleteNote();
			}
		});
	}
	$rootScope.$on('selectNote', function(event,data) {
		c.server.get({
			action: 'getNote',
			noteID: $rootScope.noteID
		}).then(function(r) {
			c.data.title = r.data.note.title;
			c.data.note = r.data.note.note;
			c.data.noteID = r.data.note.sys_id;
		});
	});


}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_body</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes Body</name>
        <option_schema>[{"hint":"Specify a title for the Notes List widget","name":"title","section":"other","default_value":"Notes","label":"Title","type":"string"},{"hint":"Select the maximum number of records to display","name":"maximum_records_to_display","section":"other","default_value":"5","label":"Maximum records to display","type":"choice"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */
	// Snippet from a Server Script 
if(!options.title){
  options.title = "Hello World";
}
	//data.notes = [];
/*var note = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID());
	noteGR.orderByDesc('sys_created_on');
	noteGR.setLimit(options.maximum_records_to_display);
	noteGR.query();*/
	if (input && input.noteID) {
		var note = new GlideRecord('x_snc_createnotes_note');
		if (note.get(input.noteID)) {
			if (input.action == 'getNote') {
				data.note = {};
				$sp.getRecordValues(data.note, note, "title, note, sys_id");
			}
			else if (input.action == 'updateNote') { 
				note.title = input.noteTitle; 
				note.note = input.noteBody; 
				note.update(); 
			}
		}
	}
	
	if (input.action == 'snDeleteNote') {
      var delNote = new GlideRecord('x_snc_createnotes_note');
      // The notes record should already be gone.  Just
      // making sure it no longer exists.
      if(delNote.get(input.noteID)){
        delNote.deleteRecord();
      }

    }

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-06-08 23:15:59</sys_created_on>
        <sys_id>67fa967d979b61100420fca6f053afda</sys_id>
        <sys_mod_count>32</sys_mod_count>
        <sys_name>Notes Body</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_67fa967d979b61100420fca6f053afda</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-06-09 13:33:36</sys_updated_on>
        <template><![CDATA[
<div>
  <div class="panel panel-default" ng-show="c.data.noteID">
    <div class="panel-heading clearfix">
     
      <div class="row">
        <div class="col-md-12">
          <input class="form-control" id="note-title" ng-model="c.data.title" ng-change="c.updateNote('title')" ng-model-options="{debounce: 1000}"/>
        </div>
      </div>
      
    </div>
    <div class="panel-body">
      <textarea class="form-control" id="note-body" ng-model="c.data.note" ng-change="c.updateNote('body')" ng-model-options="{debounce: 1000}" ></textarea>
    </div>
  </div>
</div>
<delete-button-confirm></delete-button-confirm>
 <!-- your widget template 
 <h3 class="panel-title pull-left">
        {{::c.options.title}}
      </h3>
<div class="col-md-1">
        <buttton class="btn btn-danger pull-right" ng-click="c.confirmedDelete()">
          <span class="glyphicon glyphicon-trash"></span>
        </buttton>
      </div>

<div class="panel panel-default" ng-show="c.data.noteID">
  <div class="panel-heading clearfix">
    <div class="row">
      <div class="col-md-12">
        <input class="form-control" id="note-title" ng-model="c.data.title" />
      </div>
    </div>
  </div>
  <div class="panel-body">
    <textarea class="form-control" id="note-body" ng-model="c.data.note" ></textarea>
  </div>
</div>-->]]></template>
    </sp_widget>
</record_update>
